<?php

namespace DummyNamespace;

use Psr\Http\Server\MiddlewareInterface;
use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Server\RequestHandlerInterface;

class DummyMiddleware
{
    /** 
     * [$foo description]
     *
     * @var [type]
     */
    protected $foo;

    /**
     * [__construct description]
     *
     * @param [type] $foo [description]
     */
    public function __construct($foo)
    {
        $this->foo = $foo;
    }

    /**
     * {@inheritdoc}
     *
     * @see  \Psr\Http\Server\MiddlewareInterface
     * @see  https://route.thephpleague.com/4.x/middleware/
     */
    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface
    {
        // Invoke the rest of the middleware stack and your controller resulting
        // in a returned response object
        $response = $handler->handle($request);

        return $response;
    }
}